{# File: twig-app/templates/pages/signup.html.twig #}
{% extends 'layout/base.html.twig' %}

{% block content %}
<div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 to-indigo-900 px-4">
    <div class="max-w-md w-full">
        {# Logo/Header #}
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-indigo-400 mb-2">Triket</h1>
            <p class="text-gray-300">Create an account to start managing your tickets</p>
        </div>

        {# Signup Card #}
        <div class="bg-white rounded-2xl shadow-xl p-8">
            <h2 class="text-2xl font-semibold text-gray-800 mb-6">Create Account</h2>

            <form id="signup-form" class="space-y-5">
                {# Name #}
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-2">Full name</label>
                    <input
                        type="text"
                        id="name"
                        name="name"
                        placeholder="John Doe"
                        class="w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition border-gray-300"
                        required
                    />
                    <p id="name-error" class="mt-2 text-sm text-red-600 hidden"></p>
                </div>

                {# Email #}
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        placeholder="you@example.com"
                        class="w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition border-gray-300"
                        required
                    />
                    <p id="email-error" class="mt-2 text-sm text-red-600 hidden"></p>
                </div>

                {# Password #}
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                    <input
                        type="password"
                        id="password"
                        name="password"
                        placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
                        class="w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition border-gray-300"
                        required
                    />
                    <p id="password-error" class="mt-2 text-sm text-red-600 hidden"></p>
                </div>

                {# Confirm Password #}
                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-2">Confirm Password</label>
                    <input
                        type="password"
                        id="confirmPassword"
                        name="confirmPassword"
                        placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
                        class="w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition border-gray-300"
                        required
                    />
                    <p id="confirmPassword-error" class="mt-2 text-sm text-red-600 hidden"></p>
                </div>

                {# Submit #}
                <button
                    type="submit"
                    id="submit-btn"
                    class="w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition disabled:opacity-50 disabled:cursor-not-allowed"
                >
                    Create Account
                </button>
            </form>

            {# Sign-in link #}
            <p class="mt-6 text-center text-sm text-gray-600">
                Already have an account?
                <a href="/auth/login" class="font-medium text-indigo-600 hover:text-indigo-500">Sign in</a>
            </p>
        </div>

        {# Demo Info #}
        <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
            <p class="text-sm text-blue-800 font-medium mb-1">ðŸ’¡ Demo</p>
            <p class="text-xs text-blue-700">This app uses mock auth â€“ use unique credentials to sign up / sign in.</p>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const store = window.ticketStore;
    const form = document.getElementById('signup-form');
    const submitBtn = document.getElementById('submit-btn');
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const nameError = document.getElementById('name-error');
    const emailError = document.getElementById('email-error');
    const passwordError = document.getElementById('password-error');
    const confirmPasswordError = document.getElementById('confirmPassword-error');

    // Check if already authenticated
    if (store.getState().isAuthenticated) {
        window.location.href = '/dashboard';
        return;
    }

    // Handle form submission
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Clear previous errors
        [nameError, emailError, passwordError, confirmPasswordError].forEach(el => el.classList.add('hidden'));
        [nameInput, emailInput, passwordInput, confirmPasswordInput].forEach(el => {
            el.classList.remove('border-red-500', 'bg-red-50');
        });

        // Get form values
        const name = nameInput.value;
        const email = emailInput.value;
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        // Check password match
        if (password !== confirmPassword) {
            confirmPasswordError.textContent = 'Passwords do not match';
            confirmPasswordError.classList.remove('hidden');
            confirmPasswordInput.classList.add('border-red-500', 'bg-red-50');
            showToast('error', 'Passwords do not match');
            return;
        }

        // Disable button and show loading
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner inline-block mr-2"></span> Creating account...';

        // Attempt signup
        const success = await store.signup(email, password, name);

        if (success) {
            // Show success toast
            showToast('success', `Account created! Welcome, ${store.getState().user?.name}!`);
            
            // Redirect after short delay
            setTimeout(() => {
                window.location.href = '/dashboard';
            }, 500);
        } else {
            // Show errors
            const errors = store.getState().formErrors;
            
            if (errors.name) {
                nameError.textContent = errors.name;
                nameError.classList.remove('hidden');
                nameInput.classList.add('border-red-500', 'bg-red-50');
            }
            
            if (errors.email) {
                emailError.textContent = errors.email;
                emailError.classList.remove('hidden');
                emailInput.classList.add('border-red-500', 'bg-red-50');
            }
            
            if (errors.password) {
                passwordError.textContent = errors.password;
                passwordError.classList.remove('hidden');
                passwordInput.classList.add('border-red-500', 'bg-red-50');
            }

            // Show toast
            showToast('error', 'Please fix the errors in the form');

            // Re-enable button
            submitBtn.disabled = false;
            submitBtn.textContent = 'Create Account';
        }
    });

    // Toast function
    function showToast(type, message) {
        const container = document.getElementById('toast-container');
        
        const colors = {
            success: 'bg-green-50 border-green-200 text-green-800',
            error: 'bg-red-50 border-red-200 text-red-800',
            info: 'bg-blue-50 border-blue-200 text-blue-800'
        };

        const icons = {
            success: `<svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>`,
            error: `<svg class="w-5 h-5 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>`,
            info: `<svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
            </svg>`
        };

        const toast = document.createElement('div');
        toast.className = `${colors[type]} border rounded-lg shadow-lg p-4 flex items-center gap-3 max-w-sm animate-slide-in-right mb-4`;
        toast.innerHTML = `
            ${icons[type]}
            <p class="text-sm font-medium flex-1">${message}</p>
            <button onclick="this.parentElement.remove()" class="shrink-0">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
            </button>
        `;

        container.appendChild(toast);

        // Auto-remove after 3s
        setTimeout(() => {
            toast.remove();
        }, 3000);
    }
});
</script>
{% endblock %}